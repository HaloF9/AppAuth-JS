"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Represents a revoke token request.
 * For more information look at:
 * https://tools.ietf.org/html/rfc7009#section-2.1
 */
var RevokeTokenRequest = /** @class */ (function () {
    function RevokeTokenRequest(request) {
        this.token = request.token;
        this.tokenTypeHint = request.token_type_hint;
        this.clientId = request.client_id;
        this.clientSecret = request.client_secret;
    }
    /**
     * Serializes a TokenRequest to a JavaScript object.
     */
    RevokeTokenRequest.prototype.toJson = function () {
        var json = { token: this.token };
        if (this.tokenTypeHint) {
            json['token_type_hint'] = this.tokenTypeHint;
        }
        if (this.clientId) {
            json['client_id'] = this.clientId;
        }
        if (this.clientSecret) {
            json['client_secret'] = this.clientSecret;
        }
        return json;
    };
    RevokeTokenRequest.prototype.toStringMap = function () {
        var json = this.toJson();
        // :(
        return json;
    };
    return RevokeTokenRequest;
}());
exports.RevokeTokenRequest = RevokeTokenRequest;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV2b2tlX3Rva2VuX3JlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcmV2b2tlX3Rva2VuX3JlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUErQkE7Ozs7R0FJRztBQUNIO0lBTUUsNEJBQVksT0FBK0I7UUFDekMsSUFBSSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQzNCLElBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQztRQUM3QyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDbEMsSUFBSSxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDO0lBQzVDLENBQUM7SUFFRDs7T0FFRztJQUNILG1DQUFNLEdBQU47UUFDRSxJQUFJLElBQUksR0FBMkIsRUFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBQyxDQUFDO1FBQ3ZELElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN0QixJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1NBQzlDO1FBQ0QsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ25DO1FBQ0QsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1NBQzNDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsd0NBQVcsR0FBWDtRQUNFLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUN6QixLQUFLO1FBQ0wsT0FBUSxJQUFZLENBQUM7SUFDdkIsQ0FBQztJQUNILHlCQUFDO0FBQUQsQ0FBQyxBQW5DRCxJQW1DQztBQW5DWSxnREFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0cmluZ01hcH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG4vKlxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLlxyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdFxyXG4gKiBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGVcclxuICogTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcclxuICogZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBTdXBwb3J0ZWQgdG9rZW4gdHlwZXNcclxuICovXHJcbmV4cG9ydCB0eXBlIFRva2VuVHlwZUhpbnQgPSAncmVmcmVzaF90b2tlbid8J2FjY2Vzc190b2tlbic7XHJcblxyXG4vKipcclxuICogUmVwcmVzZW50cyB0aGUgVG9rZW4gUmVxdWVzdCBhcyBKU09OLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBSZXZva2VUb2tlblJlcXVlc3RKc29uIHtcclxuICB0b2tlbjogc3RyaW5nO1xyXG4gIHRva2VuX3R5cGVfaGludD86IFRva2VuVHlwZUhpbnQ7XHJcbiAgY2xpZW50X2lkPzogc3RyaW5nO1xyXG4gIGNsaWVudF9zZWNyZXQ/OiBzdHJpbmc7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXByZXNlbnRzIGEgcmV2b2tlIHRva2VuIHJlcXVlc3QuXHJcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGxvb2sgYXQ6XHJcbiAqIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3MDA5I3NlY3Rpb24tMi4xXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUmV2b2tlVG9rZW5SZXF1ZXN0IHtcclxuICB0b2tlbjogc3RyaW5nO1xyXG4gIHRva2VuVHlwZUhpbnQ6IFRva2VuVHlwZUhpbnR8dW5kZWZpbmVkO1xyXG4gIGNsaWVudElkOiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIGNsaWVudFNlY3JldDogc3RyaW5nfHVuZGVmaW5lZDtcclxuXHJcbiAgY29uc3RydWN0b3IocmVxdWVzdDogUmV2b2tlVG9rZW5SZXF1ZXN0SnNvbikge1xyXG4gICAgdGhpcy50b2tlbiA9IHJlcXVlc3QudG9rZW47XHJcbiAgICB0aGlzLnRva2VuVHlwZUhpbnQgPSByZXF1ZXN0LnRva2VuX3R5cGVfaGludDtcclxuICAgIHRoaXMuY2xpZW50SWQgPSByZXF1ZXN0LmNsaWVudF9pZDtcclxuICAgIHRoaXMuY2xpZW50U2VjcmV0ID0gcmVxdWVzdC5jbGllbnRfc2VjcmV0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VyaWFsaXplcyBhIFRva2VuUmVxdWVzdCB0byBhIEphdmFTY3JpcHQgb2JqZWN0LlxyXG4gICAqL1xyXG4gIHRvSnNvbigpOiBSZXZva2VUb2tlblJlcXVlc3RKc29uIHtcclxuICAgIGxldCBqc29uOiBSZXZva2VUb2tlblJlcXVlc3RKc29uID0ge3Rva2VuOiB0aGlzLnRva2VufTtcclxuICAgIGlmICh0aGlzLnRva2VuVHlwZUhpbnQpIHtcclxuICAgICAganNvblsndG9rZW5fdHlwZV9oaW50J10gPSB0aGlzLnRva2VuVHlwZUhpbnQ7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5jbGllbnRJZCkge1xyXG4gICAgICBqc29uWydjbGllbnRfaWQnXSA9IHRoaXMuY2xpZW50SWQ7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5jbGllbnRTZWNyZXQpIHtcclxuICAgICAganNvblsnY2xpZW50X3NlY3JldCddID0gdGhpcy5jbGllbnRTZWNyZXQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4ganNvbjtcclxuICB9XHJcblxyXG4gIHRvU3RyaW5nTWFwKCk6IFN0cmluZ01hcCB7XHJcbiAgICBsZXQganNvbiA9IHRoaXMudG9Kc29uKCk7XHJcbiAgICAvLyA6KFxyXG4gICAgcmV0dXJuIChqc29uIGFzIGFueSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==